# Generated by Django 5.1.4 on 2024-12-30 20:42

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('project_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_index=True, max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('message', models.TextField()),
                ('submitted_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('responded', 'Responded'), ('closed', 'Closed')], db_index=True, default='pending', max_length=10)),
                ('is_urgent', models.BooleanField(db_index=True, default=False)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_approved', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'verbose_name': 'Contact Us',
                'verbose_name_plural': 'Contact Us Messages',
                'indexes': [models.Index(fields=['status'], name='project_app_status_9112b5_idx'), models.Index(fields=['submitted_at'], name='project_app_submitt_5ada94_idx')],
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('category_type', models.CharField(choices=[('IT', 'Information Technology'), ('Kids', 'Kids Training')], db_index=True, max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Course Category',
                'verbose_name_plural': 'Course Categories',
                'indexes': [models.Index(fields=['slug', 'is_active'], name='project_app_slug_fac66d_idx'), models.Index(fields=['name', 'category_type'], name='project_app_name_53edbe_idx')],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField()),
                ('duration_in_weeks', models.PositiveIntegerField(help_text='Duration in weeks')),
                ('difficulty_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], db_index=True, default='Beginner', max_length=20)),
                ('syllabus', models.TextField(blank=True, help_text='List the syllabus topics in detail', null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='project_app.coursecategory')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='EmployeeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_index=True, max_length=255)),
                ('role', models.CharField(choices=[('Head_of_Sales', 'VP of Sales'), ('Head_of_Product', 'VP of Product'), ('Head_of_HR', 'VP of Human Resources'), ('Head_of_Customer_Support', 'VP of Customer Support'), ('Head_of_Compliance_and_Legal', 'VP of Compliance and Legal Affairs')], db_index=True, max_length=50)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='employee_profiles/')),
                ('nid_number', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True)),
                ('nid_front_image', models.ImageField(blank=True, null=True, upload_to='nid_images/front/')),
                ('nid_back_image', models.ImageField(blank=True, null=True, upload_to='nid_images/back/')),
                ('address', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee Profile',
                'verbose_name_plural': 'Employee Profiles',
            },
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_index=True, max_length=255)),
                ('role', models.CharField(choices=[('CEO', 'Chief Executive Officer'), ('COO', 'Chief Operating Officer'), ('CFO', 'Chief Financial Officer'), ('CTO', 'Chief Technology Officer'), ('CMO', 'Chief Marketing Officer')], db_index=True, max_length=3)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='executive_profiles/')),
                ('nid_number', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True)),
                ('nid_front_image', models.ImageField(blank=True, null=True, upload_to='nid_images/front/')),
                ('nid_back_image', models.ImageField(blank=True, null=True, upload_to='nid_images/back/')),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('address', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='executive_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Executive Management Team Member',
                'verbose_name_plural': 'Executive Management Team Members',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_index=True, max_length=255)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='student_profiles/')),
                ('nid_number', models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True)),
                ('nid_front_image', models.ImageField(blank=True, null=True, upload_to='nid_images/front/')),
                ('nid_back_image', models.ImageField(blank=True, null=True, upload_to='nid_images/back/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('enrollment_date', models.DateField(db_index=True, default=django.utils.timezone.now)),
                ('profession', models.CharField(choices=[('Student', 'Student'), ('JobHolder', 'Job Holder'), ('Self', 'Self')], db_index=True, default='Student', max_length=50)),
                ('monthly_cost', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Monthly cost (in your local currency)', max_digits=10, null=True)),
                ('parent_name', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('parent_nid_front_image', models.ImageField(blank=True, null=True, upload_to='parent_nid_images/front/')),
                ('parent_nid_back_image', models.ImageField(blank=True, null=True, upload_to='parent_nid_images/back/')),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('education_level', models.CharField(blank=True, choices=[('HighSchool', 'High School'), ('Undergraduate', 'Undergraduate'), ('Graduate', 'Graduate'), ('PostGraduate', 'Post Graduate'), ('PhD', 'PhD'), ('Other', 'Other')], db_index=True, max_length=50, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed'), ('Separated', 'Separated'), ('Other', 'Other')], db_index=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other'), ('PreferNotToSay', 'Prefer Not to Say')], db_index=True, max_length=50, null=True)),
                ('course_interested', models.ManyToManyField(blank=True, related_name='interested_students', to='project_app.course')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Profile',
                'verbose_name_plural': 'Student Profiles',
            },
        ),
        migrations.CreateModel(
            name='CoursePurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, help_text='Discount amount applied to the course', max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, help_text='The amount paid for the course', max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], db_index=True, default='pending', max_length=10)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_approved', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='project_app.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_purchases', to='project_app.studentprofile')),
            ],
            options={
                'verbose_name': 'Course Purchase',
                'verbose_name_plural': 'Course Purchases',
            },
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['slug', 'is_active'], name='project_app_slug_978f1b_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['title', 'difficulty_level'], name='project_app_title_14d28d_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['category', 'price'], name='project_app_categor_4ae2c6_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeprofile',
            index=models.Index(fields=['user', 'is_active'], name='project_app_user_id_edeb1d_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeprofile',
            index=models.Index(fields=['role', 'created_at'], name='project_app_role_0a68ef_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeprofile',
            index=models.Index(fields=['nid_number'], name='project_app_nid_num_1c5465_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='employeeprofile',
            unique_together={('user', 'role')},
        ),
        migrations.AddIndex(
            model_name='staffprofile',
            index=models.Index(fields=['user', 'is_active'], name='project_app_user_id_9ca5a9_idx'),
        ),
        migrations.AddIndex(
            model_name='staffprofile',
            index=models.Index(fields=['role', 'created_at'], name='project_app_role_b1daa3_idx'),
        ),
        migrations.AddIndex(
            model_name='staffprofile',
            index=models.Index(fields=['nid_number'], name='project_app_nid_num_f7ea4a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='staffprofile',
            unique_together={('user', 'role')},
        ),
        migrations.AddIndex(
            model_name='studentprofile',
            index=models.Index(fields=['user', 'is_active'], name='project_app_user_id_467c2b_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprofile',
            index=models.Index(fields=['full_name'], name='project_app_full_na_ab4288_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprofile',
            index=models.Index(fields=['created_at'], name='project_app_created_f4da83_idx'),
        ),
        migrations.AddIndex(
            model_name='coursepurchase',
            index=models.Index(fields=['student', 'course', 'payment_status'], name='project_app_student_9f75e5_idx'),
        ),
        migrations.AddIndex(
            model_name='coursepurchase',
            index=models.Index(fields=['payment_status'], name='project_app_payment_30b112_idx'),
        ),
    ]
